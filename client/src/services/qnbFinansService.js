/**
 * QNB Finans API Service
 * Frontend service for QNB Finans e-solutions integration
 */

import api from "./api";

const qnbFinansService = {
  // QNB Finans Settings
  getSettings: async () => {
    try {
      const response = await api.get("/settings/qnb-finans");
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  saveSettings: async (settings) => {
    try {
      const response = await api.post("/settings/qnb-finans", settings);
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  testConnection: async (credentials) => {
    try {
      const response = await api.post("/settings/qnb-finans/test", credentials);
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  // Invoice Operations
  generateEInvoice: async (orderId) => {
    try {
      const response = await api.post(
        `/qnb-finans/orders/${orderId}/qnb-einvoice`
      );
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  generateEArchive: async (orderId) => {
    try {
      const response = await api.post(
        `/qnb-finans/orders/${orderId}/qnb-earsiv`
      );
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  getInvoiceStatus: async (invoiceId) => {
    try {
      const response = await api.get(
        `/qnb-finans/invoices/${invoiceId}/status`
      );
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  cancelInvoice: async (invoiceId, reason = "") => {
    try {
      const response = await api.post(
        `/qnb-finans/invoices/${invoiceId}/cancel`,
        {
          reason,
        }
      );
      return response.data;
    } catch (error) {
      throw error;
    }
  },

  // Determine document type automatically
  determineDocumentType: (order, customerType = "individual") => {
    // Turkish e-invoice rules:
    // - Companies (VKN holders) must receive e-invoice
    // - Individuals with orders > threshold must receive e-invoice
    // - Others receive e-archive

    const E_INVOICE_THRESHOLD = 5000; // TRY threshold for e-invoice requirement

    if (customerType === "company") {
      return "einvoice";
    }

    const orderAmount = order.totalAmount || 0;
    if (orderAmount >= E_INVOICE_THRESHOLD) {
      return "einvoice";
    }

    return "earsiv";
  },

  // Auto-generate appropriate document
  autoGenerateDocument: async (orderId, customerType = "individual") => {
    try {
      // First, get order details to determine document type
      const orderResponse = await api.get(`/orders/${orderId}`);
      const order = orderResponse.data;

      const documentType = qnbFinansService.determineDocumentType(
        order,
        customerType
      );

      if (documentType === "einvoice") {
        return await qnbFinansService.generateEInvoice(orderId);
      } else {
        return await qnbFinansService.generateEArchive(orderId);
      }
    } catch (error) {
      throw error;
    }
  },

  // Validate QNB Finans credentials
  validateCredentials: (credentials) => {
    const { apiKey, clientId, clientSecret } = credentials;

    const errors = [];

    if (!apiKey || apiKey.trim() === "") {
      errors.push("API anahtarı gereklidir");
    }

    if (!clientId || clientId.trim() === "") {
      errors.push("Client ID gereklidir");
    }

    if (!clientSecret || clientSecret.trim() === "") {
      errors.push("Client Secret gereklidir");
    }

    return {
      isValid: errors.length === 0,
      errors,
    };
  },

  // Format QNB Finans error messages
  formatErrorMessage: (error) => {
    if (error.response?.data?.message) {
      return error.response.data.message;
    }

    if (error.message) {
      return error.message;
    }

    return "QNB Finans işlemi sırasında bilinmeyen bir hata oluştu";
  },
};

export default qnbFinansService;
